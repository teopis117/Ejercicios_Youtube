/* agregamos la fuente de google */
@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@300;400;500;700&display=swap');

/* reseteamos todos los elementos */
*
{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Ubuntu', sans-serif;
}


body
{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #67a5d4;
}

.card
{
    position: relative;
    width: 350px;
    height: 120px;
    /* comentamos la anchura anterior ya que con la clase active que agregamos anteriormente podemos hacer el scroll */
    /* height: 400px; */
    background-color: #ffff;
    box-shadow: 0 50px 50px rgba(0, 0, 0, 0.2);
    padding: 20px;
    overflow: hidden;
    transition: height 0.5s ease-in-out;
}


.card.active
{
    height: 400px;
}
/* de esta manera hacemos que el titulo y la imagen de perfil se posicionen uno al lado del otro */
.card .contenido
{
    display: flex;
    align-items: center;
}
.card .contenido .imgBx 
{
    position: relative;
    width: 80px;
    height: 80px;
    background-position: cover;
    border-radius: 50%;
    overflow: hidden;
}
/*  si le damos al contenedor los estilos de esta manera no suscedera nada.card .contenido .imBx  tenemos que darselos a la imagen propia*/
.card .contenido .imgBx img
{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}
 


.card .contenido h2{
    margin-left: 15px;
    font-size: 1.3rem;
    color: #111;
}


.card .contenido h2 span
{
    font-size: 0.8rem;
    font-weight: 501;
    color: #999;
}

.navegacion
{
position: relative;
top: 25px;
border-top: 1px solid rgba(0, 0, 0, 0.1);
padding: 20px 0;
}

.navegacion li
{
    /* recordemos que con list style eliminamos las vi√±etas
    pero solo si estamos aplicando la propiedad al li */
list-style: none;
margin: 15px 0;
}

.navegacion li a
{
     /* y con text-decoration: none ; eliminamos el subrayado al enlace */
    text-decoration: none;
    /* recordando que tenemos dentro de los enlaces el icono y el mensaje del enlace y de esta forma podemos alinearlos verticalmente y horizontalmente */
    display: flex;
    align-items: center;
    color: #555;
    font-size: 1.1em;
    /* agregamos esta transicion  para que al momento de hacer hover se vea mejor */
    transition: 0.25s;
}
.navegacion li a:hover
{
    color: #36b3ff;
}

/* le damos estilos a los iconos */
.navegacion li a ion-icon
{
    font-size: 1.6em;
    margin-right: 15px;
}

.toggle
{
    position: absolute;
    bottom: 0;
    right: 0;
    height: 40px;
    width: 40px;
    background: #36b3ff;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    z-index: 100;
}

.toggle ion-icon
{
    color: #ffff;
    font-size: 1.4em;
    transition: ease-in-out 0.5s;
}

/* cuando hacemos click sobre el icono de la flecha agregamos la clase .active entonces podemos utilizarlo para hacer lo siguiente */
.card .active .toggle ion-icon
{
    /* le aplicamos la propiedad de rotar */
    transform: rotate(180deg);
}